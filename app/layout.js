// app/layout.tsx
import { Geist, Geist_Mono } from "next/font/google";
import { Inter, Archivo } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/lib/contexts/ThemeContext";
import SafariDetection from "@/lib/utils/safariDetection";

// Google Fonts
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
  display: "swap",
  weight: ["400", "500", "600", "700", "800", "900"], // pick the weights you need
});

const archivo = Archivo({
  variable: "--font-archivo",
  subsets: ["latin"],
  display: "swap",
  weight: ["100", "400", "500", "600", "700"], // adjust to your needs
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              (function() {
                var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
                var isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
                
                if (isSafari) {
                  document.documentElement.classList.add('safari-browser');
                }
                if (isIOS) {
                  document.documentElement.classList.add('ios-device');
                }
                if (isSafari && isIOS) {
                  document.documentElement.classList.add('safari-mobile');
                }
              })();
            `,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${inter.variable} ${archivo.variable} antialiased w-full relative transition-colors duration-300`}
        style={{ 
          backgroundColor: 'var(--theme-bg-primary)'
        }}
      >
        <ThemeProvider>
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}
